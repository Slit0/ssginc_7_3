 Spring Framework 및 SpringBoot3


 1. Spring Framework

  1) 개요

   - Road Johnson 이 'Export One-on-One J2EE Development without EJB(Enterprise Java Beans)' 책을 통해서 소개. 
   - 2003년 2월부터 오픈 소스로 시작된 프로젝트.

  2) 특징
   - 경량의 컴포넌트.
   - IoC ( Inversion of Control: 제어의 역행) 컨테이너(스프링의 특정 클래스) 기반에서 관리됨.
     ( Serlvet/JSP가 tomcat 컨테이너에서 관리된것과 유사 )
     IoC 개념? 클래스를 직접 생성하지 않고 의존성도 직접 설정하지 않음. 모두 Spring에게 맡김.

   - JDBC 추상화 ( Mybatis 처럼 wrap한 클래스들 제공 ==> 예외처리 불필요 ... )
   - 선언적 트랜잭션 ( 어노테이션으로 트랜잭션 처리 가능 ==> @Transactional 지정. 모두 성공하면 자동으로 commit,
                                               만약 하나라도 실패하면 모두 자동으로 rollback 됨.
      예>
          @Transactional
          public int delAndUpdate(){

              session.delete(~~~~);
	      session.update(~~~~);

	  }
   - 다양한 뷰(html화면) 기술 ( JSP, Thymeleaf, velocity 등 )
   - 검증된 Spring MVC 아키텍쳐 제공.
   - REST API 지원. ( 클라이언트와 서버간에 JSON 데이터 포맷으로 통신하는 방법의미)

      예>  클라이언트                         서버(웹서버)
          ---------                      ------
	  PC용 웹브라우저       JSON
	  모바일,테블릿   <---------------->
	  OTT 셋탑박스
	  자동차,,,
	  ..

                     
  3) Spring Framework 생태계
     
     https://spring.io

     - Spring Framework
     - Spring Boot
     - Spring Security
     - Spring Data
     - Spring AI
       ...

  4) Spring Framework 버전

    https://spring.io/projects/spring-framework#learn

    - 6.X ( 2022년 )
      JDK 17+

  5) 용어 정리
   
   가. POJO ( Plain Old Java Object)
     - 일반적인 오래된 자바 객체라는 의미.
     - 어떠한 클래스 또는 인터페이스를 상속 및 구현하지 않아서
       어떤 개발환경에서도 사용가능한 특징을 가짐.
         예>

        
	HttpServlet
	    |
	    |
	 MyServlet ( MyServlet 는 웹어플리케이션 환경에서만 사용 가능한 제약이 됨 )

   나. Java Beans
      - EJB 에서 사용했던 용어
      - 특정한 규칙을 가짐
        a. public 기본 생성자만 존재
	b. getter/setter 메서드 존재
	c. implments Serialzable

   다. Spring bean
      - POJO 기반의 Spring 어플리케이션에서 만든 모든 자바 클래스 의미.

  
   라. IoC ( Inversion of Control : 제어의 역행 )
      - 우리가 필요한 빈(클래스)를 직접 생성하거나 빈간에 의존성을 직접 설정하지 않고
        우리대신에 외부(IoC Container)에서 필요한 빈을 생성 및 의존성을 설정하는 개념.

                   
   마. IoC Container

      - IoC 방법으로 빈(클래스)를 관리한다는 의미에서 IoC Container 라고 부름.
        (Spring Container, Spring Context 모두 동일한 개념이다. )

      - 하드웨어 개념이 들어갔으나  일반 클래스이다.  ( XXXApplicationContext )


      * 계층 구조


 BeanFactory(인터페이스) MessageSource(인터페이스)
	        |
                |
	    ApplicationContext ( 인터페이스, org.springframework.context )

	         |
		 |
            AnnotationConfigApplicationContext(클래스, Java SE 환경의 IoC Container 임)
	    GenericXmlApplicationContext(클래스, Java SE 환경의 IoC Container 임)
	    ..

	    XXXWebApplicationContext(클래스, Java EE 환경의 IoC Container 임)

  

   바. 의존성 주입 ( Dependency Injection: DI )
  
      - 개념: 임의의 클래스에서 다른 클래스를 참조할 때
            직접 생성하는 것이 아니고 외부에서 생성한후 생성자 또는 setter 메서드 이용해서 
	    설정하는 방법 의미함.

      - 종류 2가지

        a. 생성자 주입 ( Constructor-based Dependency Injection )
	b. setter 메서드 주입 ( setter-based Dependency Injection )

     예>

         BoardListServlet     BoardService                              BoardDAO
	                       
			        BoardDAO dao;
			       public void setDao(BoardDAO dao){
			         this.dao =dao;
			       }

			       public BoardService(BoardDAO dao){
			         this.dao =dao;
			       }
	
	BoardService service =
	   new BoardServiceImpl(new BoardDAO());  // 생성자 주입
	//service.setDao(new BoardDAO());         //  setter 메서드 주입


2. 환경 설정

  1) JDK 17 설치
  2) SpringBoot 3.2.8 ( Spring Framework 6.X 내장됨 )
    => SpringBoot 3 버전은 JDK 17+ 필요함.
  
  3) 개발툴 설치
    - STS ( Spring Tool Suite ) 툴 지원.
    - 현재 지원되는 종류 2가지

      sts3 : Spring Framework 와 Spring Boot를 각각 개발할 수 있는 개발툴.


      sts4 : Spring Boot 만 지원되는 개발툴.
     

    - 한글 인코딩 확인
       
        window > preference > general > workspace 에서 UTF-8 확인

    - JSP/CSS/jS 위한 web 플러그인 추가

       hep > eclipse marketplace >  web 검색 > Eclipse Enterprise Java and  Web Developer Tool 3.36 설치

  
  4) tomcat 설치 안함.
     이유는 SpringBoot에서는 내장 tomcat 을 사용한다.


 3.  SpringBoot 프로젝트 작성

   1) 로컬로 프로젝트 작성

     STS > File > NEW > Spring Starter Project (Boot 용 프로젝트 )

   2) 웹사이트 이용 ( initializer 방법 )

    http://start.spring.io 

    project: maven 선택




 4. 빌드툴(build tool)

   - 개발할 때 도움을 받을 수 있는 툴.

   - 전통적인 프로그램 개발 프로세스 ( 수동으로 설정 )


   소스작성--->필요한jar다운로드 및 컴파일 ---> 단위테스트 ---> 패키징(jar, war) -----> 배포

    
                    
           <----------------------------------------------------------->
	     자동화 가능

    - 종류 2가지

     1) maven
       - 설정정보를 pom.xml 파일에 설정
       - 빌드 과정 단계
         a. validate
	 b. compile
	 c. test
	 d. package
	 e. install ( 패키징 )
	 f. deploy

     
     2) gradle
       - 설정정보를 build.gradle 파일에 설정


    - 필요한 의존성을 설정하는 방법
      
      http://mvnrepository.com 에서 필요한 키워드 입력하고  maven 또는 gradle 항목에서 복사해서 사용함.

